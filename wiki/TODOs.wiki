#summary TODO list for vision project

= Introduction =
Please add items that you think need to be done for the vision project to this page. Items with owners can be marked with your name, so two people don't work on the same thing. Items finished can be marked finished as well.

= Items to do =
== Classifier tasks ==
  * Replace decision tree with OpenCV's decision tree (add unit test) (*Anand*)
  * OpenCV Bagging and Boosting (*Anand*)
  * Add support for multi-class (*Anand*)
  * Implement 'Attentional Cascade' described in the Viola and Jones paper.
  * Use CvSVM after honing down on features to use.

== Feature tasks ==
  * Implement edge detection (sobel filter) (add unit test)
  * Implement line detection (hough filter) (add unit test)
  * Implement corner detection (harris filter) (add unit test)
  * Kalman Filter (*Alec*)
  * Particle filters
  * “Sharing visual features for multiclass and multiview object detection.”
  * “Rapid object detection using a boosted cascade of simple features”
  * "A new biologically motivated framework for robust object recognition”
  * “Distinctive image features from scale-invariant keypoints”

== Other tasks ==
  * (*[Improvements DONE]*) Implement removing of false positive frames (apparently lots of students got better F1 scores doing this says Ian), by coalescing the windows. Uses a threshold of 0.05 percent of overlap for coalescing, can be one parameter to tweak to see what improves F1-scores. Currently improved FINAL F1-score from 0.003 to 0.13 (*Anand*)
  * (*[Improvements DONE]*) Increased length of windows from 104 to 208. Improved FINAL F1-score from 0.13 to 0.26. (*Anand*)
  * Use built in OpenCV samples folder such as blob detection (which works surprisingly well!)

== Infrastructure tasks ==
  * Need a way to tune various feature weights so we get optimal performance. 
    * A kind of infrastructure script that tunes for these parameters automatically by running various tests and getting F1 measures would be useful. 
    * Something on the lines of what WEKA does.
    * Its ok to expect features in a file if that makes it easier.
  * Maybe think of a pipeline design, so its easy to add features (not sure).